{"version":3,"sources":["AppContext.js","StateContext.js","components/SortRestaurants.js","components/StarRating.js","RestaurantContext.js","components/InfoWindowEx.js","components/HomeMap.js","components/Home.js","components/UpdateRestaurant.js","components/RestaurantReview.js","components/NewRatingInput.js","components/RestaurantMap.js","components/RestaurantDetails.js","components/PageNotFound.js","components/Searchbar.js","components/Header.js","components/Footer.js","components/FlashMessage.js","components/CreateRestaurantPage.js","App.js","index.js"],"names":["AppContext","createContext","StateContext","SortRestaurants","setRestaurants","setRestaurantCollection","restaurantCollection","setSortCount","useState","locationType","setLocationType","location","setLocation","showButton","setShowButton","dispatch","useContext","e","a","preventDefault","axios","get","response","data","slice","type","value","color","onChange","newList","currentTarget","sort","b","rating","pricerange","count","name","localeCompare","prev","defaultValue","disabled","onSubmit","placeholder","onClick","StarRating","stars","setStars","useEffect","starsList","num","parseFloat","i","push","key","className","aria-hidden","RestaurantContext","InfoWindowEx","props","infoWindowRef","React","createRef","contentElement","document","createElement","ReactDOM","render","Children","only","children","current","infowindow","setContent","ref","GoogleApiWrapper","apiKey","process","sortCount","markers","setMarkers","selectedMarker","setSelectedMarker","setRerender","history","useHistory","setKey","length","firstItem","pastList","setPastList","pastSortCount","setPastSortCount","map","restaurant","lat","latitude","lng","longtitude","id","position","google","zoom","initialCenter","style","width","height","containerStyle","onClose","visible","Home","isLoading","setIsLoading","restaurants","counter","setCounter","state","window","confirm","delete","filter","fetchData","triggerMoreRestaurants","useCallback","scrollY","innerHeight","body","offsetHeight","handleScrollEvent","_","addEventListener","removeEventListener","Provider","HomeMap","dollarAmount","description","to","loggedIn","handleDelete","UpdateRestaurant","street","city","province","country","postalcode","setRestaurant","useParams","params","address","apiResponse","results","geometry","put","priceRange","parseInt","updateInput","fetchRestaurantData","required","max","min","RestaurantReview","review","ratings","setRatings","setRatingsCollection","updatePageRating","sumOfRatings","forEach","item","updatedRating","toFixed","message","NewRatingInput","restaurant_id","newRating","setNewRating","post","updateCurrentPageRating","concat","step","coords","disableDefaultUI","zoomControl","streetViewControl","RestaurantDetails","ratingsCollection","isMoreRatings","setIsMoreRatings","scrollPosition","setScrollPosition","loadEvent","setLoadEvent","fetchRestaurantReviews","scrollTo","PageNotFound","SingleSearchResult","setSearchResults","Searchbar","timer","searchQuery","setSearchQuery","searchResults","searchLoading","setSearchLoading","fetchResults","setTimeout","clearTimeout","result","Header","Footer","FlashMessage","flashMessages","flashMessage","index","onAnimationEnd","display","handleRemove","CreateRestaurantPage","App","initialState","Boolean","localStorage","getItem","useReducer","action","setItem","removeItem","path","exact","getElementById"],"mappings":"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","file":"static/js/main.8f89994a.chunk.js","sourcesContent":["import React, { createContext } from 'react'\n\nlet AppContext = createContext()\n\nexport default AppContext\n","import React, { createContext } from 'react'\n\nlet StateContext = createContext()\n\nexport default StateContext\n","import React, { useEffect, useState, useContext } from 'react'\nimport axios from 'axios'\nimport AppContext from '../AppContext'\n\nfunction SortRestaurants({ setRestaurants, setRestaurantCollection, restaurantCollection, setSortCount }) {\n  const [locationType, setLocationType] = useState('')\n  const [location, setLocation] = useState('')\n  const [showButton, setShowButton] = useState(false)\n\n  const dispatch = useContext(AppContext)\n\n  async function handleSubmit(e) {\n    e.preventDefault()\n    if (locationType && location) {\n      try {\n        const response = await axios.get(`/api/restaurants/search?locationType=${locationType}&location=${location}`)\n        setRestaurants(response.data.slice(0, 10))\n        setRestaurantCollection(response.data)\n        setLocation('')\n        setShowButton(true)\n      } catch (err) {\n        dispatch({ type: 'FlashMessage', value: err.response.data, color: 'error' })\n      }\n    } else {\n      dispatch({ type: 'FlashMessage', value: 'You cannot leave the fields blank.', color: 'error' })\n    }\n  }\n\n  async function resetRestaurantList() {\n    try {\n      const response = await axios.get('/api/restaurants')\n      setRestaurants(response.data.slice(0, 10))\n      setRestaurantCollection(response.data)\n      setShowButton(false)\n    } catch (err) {\n      dispatch({ type: 'FlashMessage', value: err.response.data, color: 'error' })\n    }\n  }\n\n  function arrangeRestaurants(e) {\n    let newList\n    switch (e.currentTarget.value) {\n      case 'highest-rated':\n        newList = [...restaurantCollection].sort((a, b) => b.rating - a.rating)\n        break\n      case 'lowest-rated':\n        newList = [...restaurantCollection].sort((a, b) => a.rating - b.rating)\n        break\n      case 'price-high-low':\n        newList = [...restaurantCollection].sort((a, b) => b.pricerange - a.pricerange)\n        break\n      case 'price-low-high':\n        newList = [...restaurantCollection].sort((a, b) => a.pricerange - b.pricerange)\n        break\n      case 'most-rated':\n        newList = [...restaurantCollection].sort((a, b) => b.count - a.count)\n        break\n      case 'alphabetical-a-z':\n        newList = [...restaurantCollection].sort((a, b) => a.name.localeCompare(b.name))\n        break\n      case 'alphabetical-z-a':\n        newList = [...restaurantCollection].sort((a, b) => b.name.localeCompare(a.name))\n        break\n      default:\n        newList = [...restaurantCollection]\n        break\n    }\n    setRestaurants(newList.slice(0, 10))\n    setRestaurantCollection(newList)\n    setSortCount(prev => prev + 1)\n  }\n  return (\n    <>\n      Sort by:\n      <select onChange={arrangeRestaurants} defaultValue=\"Select...\">\n        <option disabled value=\"Select...\">\n          Select...\n        </option>\n        <option value=\"highest-rated\">Highest Rated</option>\n        <option value=\"lowest-rated\">Lowest Rated</option>\n        <option value=\"most-rated\">Most Reviewed</option>\n        <option value=\"price-high-low\">Price: High-Low</option>\n        <option value=\"price-low-high\">Price: Low-High</option>\n        <option value=\"alphabetical-a-z\">Alphabetical (A-Z)</option>\n        <option value=\"alphabetical-z-a\">Alphabetical (Z-A)</option>\n      </select>\n      <h5>Search for businesses near you...</h5>\n      <form onSubmit={handleSubmit}>\n        <select onChange={e => setLocationType(e.currentTarget.value)} defaultValue={'Search by...'}>\n          <option disabled>Search by...</option>\n          <option value=\"street\">Street</option>\n          <option value=\"city\">City</option>\n          <option value=\"province\">Province</option>\n          <option value=\"country\">Country</option>\n          <option value=\"postalcode\">Postal Code</option>\n        </select>\n        <input type=\"text\" value={location} placeholder={locationType ? `Enter ${locationType}...` : 'Enter location...'} onChange={e => setLocation(e.currentTarget.value)} />\n        <button type=\"submit\">Search Restaurants</button>\n      </form>\n      {showButton && <button onClick={resetRestaurantList}>View All Restaurants</button>}\n    </>\n  )\n}\n\nexport default SortRestaurants\n","import React, { useEffect, useState } from 'react'\n\nfunction StarRating({ rating, count }) {\n  const [stars, setStars] = useState()\n  useEffect(() => {\n    let starsList = []\n    let num = parseFloat(rating)\n    for (var i = 1; i <= 5; i++) {\n      if (i <= num) {\n        starsList.push(<i key={i} className=\"fa fa-star\" aria-hidden=\"true\"></i>)\n      } else if (i - 0.5 <= num) {\n        starsList.push(<i key={i} className=\"fa fa-star-half-o\" aria-hidden=\"true\"></i>)\n      } else {\n        starsList.push(<i key={i} className=\"fa fa-star-o\" aria-hidden=\"true\"></i>)\n      }\n    }\n    setStars(starsList)\n  }, [rating])\n  return (\n    <>\n      {stars} {count ? `(${count})` : ''}\n    </>\n  )\n}\n\nexport default StarRating\n","import React, { createContext } from 'react'\n\nlet RestaurantContext = createContext()\n\nexport default RestaurantContext\n","import React, { useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport { InfoWindow } from 'google-maps-react'\n\nexport default function InfoWindowEx(props) {\n  const infoWindowRef = React.createRef()\n  const contentElement = document.createElement(`div`)\n\n  useEffect(() => {\n    ReactDOM.render(React.Children.only(props.children), contentElement)\n    infoWindowRef.current.infowindow.setContent(contentElement)\n  }, [props.children])\n\n  return <InfoWindow ref={infoWindowRef} {...props} />\n}\n","import React, { useEffect, useState, useContext } from 'react'\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from 'google-maps-react'\nimport { useHistory } from 'react-router-dom'\nimport RestaurantContext from '../RestaurantContext'\nimport InfoWindowEx from './InfoWindowEx'\n\nfunction MapContainer(props) {\n  const { restaurantCollection, sortCount } = useContext(RestaurantContext)\n  const [markers, setMarkers] = useState([])\n  const [selectedMarker, setSelectedMarker] = useState(null)\n  const [rerender, setRerender] = useState(0)\n  const history = useHistory()\n\n  const [key, setKey] = useState(0)\n  const [pastList, setPastList] = useState({\n    length: restaurantCollection.length,\n    firstItem: restaurantCollection[0]\n  })\n  const [pastSortCount, setPastSortCount] = useState(sortCount)\n\n  // Loads new markers ONLY when a search is made\n  useEffect(() => {\n    setMarkers(\n      restaurantCollection.map(restaurant => {\n        let lat = parseFloat(restaurant.latitude)\n        let lng = parseFloat(restaurant.longtitude)\n        return (\n          <Marker\n            key={restaurant.id}\n            position={{ lat, lng }}\n            onClick={() => {\n              setSelectedMarker(restaurant)\n            }}\n          />\n        )\n      })\n    )\n  }, [key])\n\n  // Rerenders the component to fix bug where info window was not appearing on first marker click\n  useEffect(() => {\n    setRerender(prev => prev + 1)\n  }, [selectedMarker])\n\n  // The following code initiates a new default center when a search is performed\n\n  useEffect(() => {\n    if (restaurantCollection.length !== pastList.length) {\n      setSelectedMarker(null)\n      setKey(prev => prev + 1)\n      setPastList({\n        length: restaurantCollection.length,\n        firstItem: restaurantCollection[0]\n      })\n    } else if (restaurantCollection[0] !== pastList.firstItem && sortCount === pastSortCount) {\n      setSelectedMarker(null)\n      setKey(prev => prev + 1)\n      setPastList({\n        length: restaurantCollection.length,\n        firstItem: restaurantCollection[0]\n      })\n    }\n    setPastSortCount(sortCount)\n  }, [restaurantCollection])\n\n  // Redirect\n  function redirectRestaurantDetails(id) {\n    history.push(`/restaurant/${id}`)\n  }\n\n  // Map Component-Specific Code\n  function zoomLevel() {\n    if (restaurantCollection.length > 2) {\n      return 9\n    }\n    return 11\n  }\n\n  function coords() {\n    if (restaurantCollection.length) {\n      return { lat: parseFloat(restaurantCollection[0].latitude), lng: parseFloat(restaurantCollection[0].longtitude) }\n    } else {\n      return { lat: 43.6532, lng: -79.3832 }\n    }\n  }\n\n  const mapStyles = {\n    width: '100%',\n    height: '100%'\n  }\n  const containerStyle = {\n    position: 'relative',\n    height: '70vh',\n    width: '100%'\n  }\n\n  return (\n    <>\n      <Map google={props.google} zoom={zoomLevel()} key={key} initialCenter={coords()} style={mapStyles} containerStyle={containerStyle}>\n        {markers}\n        {selectedMarker && (\n          <InfoWindowEx\n            onClose={() => setSelectedMarker(null)}\n            position={{\n              lat: parseFloat(selectedMarker.latitude),\n              lng: parseFloat(selectedMarker.longtitude)\n            }}\n            visible={true}\n          >\n            <div>\n              <h3>{selectedMarker.name}</h3>\n              <button type=\"button\" onClick={() => redirectRestaurantDetails(selectedMarker.id)}>\n                View Details\n              </button>\n            </div>\n          </InfoWindowEx>\n        )}\n      </Map>\n    </>\n  )\n}\n\nexport default GoogleApiWrapper({\n  apiKey: `https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${process.env.REACT_APP_API_KEY}`\n})(MapContainer)\n\n/* import React, { useEffect, useState, useContext } from 'react'\nimport { GoogleMap, withScriptjs, withGoogleMap, Marker, InfoWindow } from 'react-google-maps'\nimport RestaurantContext from '../RestaurantContext'\n\nfunction Map(props) {\n  const { restaurantCollection } = useContext(RestaurantContext)\n  const [markers, setMarkers] = useState([])\n  const [selectedMarker, setSelectedMarker] = useState(null)\n\n  useEffect(() => {\n    setMarkers(\n      restaurantCollection.map(restaurant => {\n        let lat = parseFloat(restaurant.latitude)\n        let lng = parseFloat(restaurant.longtitude)\n        return <Marker key={restaurant.id} position={{ lat, lng }} onClick={() => setSelectedMarker(restaurant)} />\n      })\n    )\n  }, [restaurantCollection])\n\n  function coords() {\n    if (restaurantCollection.length) {\n      return { lat: parseFloat(restaurantCollection[0].latitude), lng: parseFloat(restaurantCollection[0].longtitude) }\n    } else {\n      return { lat: 43.6532, lng: -79.3832 }\n    }\n  }\n\n  return (\n    <>\n      <GoogleMap defaultZoom={10} defaultCenter={coords()}>\n        {markers}\n        {selectedMarker && (\n          <InfoWindow\n            position={{\n              lat: parseFloat(selectedMarker.latitude),\n              lng: parseFloat(selectedMarker.longtitude)\n            }}\n            onCloseClick={() => {\n              setSelectedMarker(null)\n            }}\n          >\n            <div>{selectedMarker.name}</div>\n          </InfoWindow>\n        )}\n      </GoogleMap>\n    </>\n  )\n}\n\nconst WrappedMap = withScriptjs(withGoogleMap(Map))\n\nfunction HomeMap(props) {\n  const { restaurantCollection, sortCount } = useContext(RestaurantContext)\n  const [pastList, setPastList] = useState({\n    length: restaurantCollection.length,\n    firstItem: restaurantCollection[0]\n  })\n  const [pastSortCount, setPastSortCount] = useState(sortCount)\n\n  const [key, setKey] = useState(0)\n  useEffect(() => {\n    if (restaurantCollection.length !== pastList.length) {\n      setKey(prev => prev + 1)\n      setPastList({\n        length: restaurantCollection.length,\n        firstItem: restaurantCollection[0]\n      })\n    } else if (restaurantCollection[0] !== pastList.firstItem && sortCount === pastSortCount) {\n      setKey(prev => prev + 1)\n      setPastList({\n        length: restaurantCollection.length,\n        firstItem: restaurantCollection[0]\n      })\n    }\n    setPastSortCount(sortCount)\n  }, [restaurantCollection])\n  return (\n    <div style={{ width: '100vw', height: '100vh' }}>\n      <WrappedMap key={key} googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${process.env.REACT_APP_API_KEY}`} loadingElement={<div style={{ height: '100%' }} />} containerElement={<div style={{ height: '100%' }} />} mapElement={<div style={{ height: '100%' }} />} />\n    </div>\n  )\n}\n\nexport default HomeMap */\n","import React, { useEffect, useState, useContext, useCallback } from 'react'\nimport * as _ from 'underscore'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport AppContext from '../AppContext'\nimport StateContext from '../StateContext'\nimport SortRestaurants from './SortRestaurants'\nimport StarRating from './StarRating'\nimport HomeMap from './HomeMap'\nimport RestaurantContext from '../RestaurantContext'\n\nfunction Home(props) {\n  // Set up state\n  const [isLoading, setIsLoading] = useState(true)\n  const [restaurantCollection, setRestaurantCollection] = useState([])\n  const [restaurants, setRestaurants] = useState([])\n  const [counter, setCounter] = useState(10)\n  const [sortCount, setSortCount] = useState(0)\n\n  const dispatch = useContext(AppContext)\n  const state = useContext(StateContext)\n\n  // Acquire restaurant data on page load\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await axios.get('/api/restaurants')\n        setRestaurantCollection(response.data)\n        setRestaurants(response.data.slice(0, 10))\n        setIsLoading(false)\n      } catch (err) {\n        dispatch({ type: 'FlashMessage', value: 'Server is temporarily down. Please try again later.', color: 'error' })\n      }\n    }\n    fetchData()\n  }, [])\n\n  // Handles Delete Button Click\n  async function handleDelete(id) {\n    const confirm = window.confirm('Are you sure you want to delete this post?')\n    if (confirm) {\n      try {\n        await axios.delete(`/api/restaurants/${id}`)\n        setRestaurants(prev => prev.filter(restaurant => restaurant.id !== id))\n        setRestaurantCollection(prev => prev.filter(restaurant => restaurant.id !== id))\n        dispatch({ type: 'FlashMessage', value: 'Restaurant was successfully deleted!', color: 'success' })\n      } catch (err) {\n        dispatch({ type: 'FlashMessage', value: err.response.data, color: 'error' })\n      }\n    }\n  }\n\n  // Loads more restuarants when scrolled to bottom of screen\n  const triggerMoreRestaurants = useCallback(() => {\n    if (window.scrollY + window.innerHeight >= document.body.offsetHeight) {\n      setCounter(prev => prev + 10)\n    }\n  }, [])\n\n  // Throttles scroll event\n  const handleScrollEvent = useCallback(_.throttle(triggerMoreRestaurants, 200), [])\n\n  // Adds scroll event listener to trigger infinite load functionality\n  useEffect(() => {\n    window.addEventListener('scroll', handleScrollEvent)\n    return () => window.removeEventListener('scroll', handleScrollEvent)\n  }, [restaurantCollection])\n\n  // Handles Load More Button Functionality\n  useEffect(() => {\n    setRestaurants(restaurantCollection.slice(0, counter))\n    if (restaurantCollection.length && counter >= restaurantCollection.length) {\n      window.removeEventListener('scroll', handleScrollEvent)\n    }\n  }, [counter])\n\n  // Send back loading page until data has been retrieved\n  if (isLoading) {\n    return <div>Loading...</div>\n  }\n\n  return (\n    <>\n      <RestaurantContext.Provider value={{ restaurantCollection, sortCount }}>\n        <HomeMap />\n      </RestaurantContext.Provider>\n      <h1>Restaurants List</h1>\n      <SortRestaurants setRestaurants={setRestaurants} setSortCount={setSortCount} setRestaurantCollection={setRestaurantCollection} restaurantCollection={restaurantCollection} />\n      <div>\n        {restaurants.map(restaurant => {\n          let dollarAmount = ''\n          for (var i = 0; i < restaurant.pricerange; i++) {\n            dollarAmount += '$'\n          }\n          return (\n            <div key={restaurant.id}>\n              <br />\n              <div>Name: {restaurant.name}</div>\n              <div>Description: {restaurant.description}</div>\n              <div>Location: {restaurant.location}</div>\n              <div>Price Range: {dollarAmount}</div>\n              {restaurant.rating ? <StarRating rating={restaurant.rating} count={restaurant.count} /> : 'No Ratings'}\n              <br />\n              <Link to={`/restaurant/${restaurant.id}`}>View Details</Link>\n              {state.loggedIn && (\n                <>\n                  <Link to={`/restaurant/${restaurant.id}/update`}>Edit Restaurant</Link>\n                  <button onClick={() => handleDelete(restaurant.id)}>Delete Restaurant</button>\n                </>\n              )}\n              <br />\n            </div>\n          )\n        })}\n      </div>\n      {!restaurants.length && <h1>No Results found...</h1>}\n      <br />\n      <br />\n      {/* {{isMoreResults && <button onClick={() => setCounter(prev => prev + 10)}>Load More Restaurants</button>}} */}\n    </>\n  )\n}\n\nexport default Home\n","import React, { useEffect, useState, useContext } from 'react'\nimport { useParams, useHistory } from 'react-router-dom'\nimport axios from 'axios'\nimport AppContext from '../AppContext'\nimport StateContext from '../StateContext'\n\nfunction UpdateRestaurant(props) {\n  const [isLoading, setIsLoading] = useState(true)\n  const [restaurant, setRestaurant] = useState({\n    name: '',\n    description: '',\n    pricerange: '',\n    street: '',\n    city: '',\n    province: '',\n    country: '',\n    postalcode: ''\n  })\n\n  let history = useHistory()\n  const dispatch = useContext(AppContext)\n  const state = useContext(StateContext)\n  const { id } = useParams()\n\n  // Redirect if user not logged in\n  useEffect(() => {\n    if (!state.loggedIn) {\n      history.push('/')\n      dispatch({ type: 'FlashMessage', value: 'You do not have the authorization to view that page.', color: 'error' })\n    }\n  }, [state.loggedIn])\n\n  useEffect(() => {\n    if (state.loggedIn) {\n      async function fetchRestaurantData() {\n        try {\n          const response = await axios.get(`/api/restaurants/${id}`)\n          setRestaurant(response.data)\n          setIsLoading(false)\n        } catch (err) {\n          dispatch({ type: 'FlashMessage', value: err.response.data, color: 'error' })\n          history.push('/')\n        }\n      }\n      fetchRestaurantData()\n    }\n  }, [id])\n\n  async function submitHandler(e) {\n    e.preventDefault()\n    try {\n      let location = `${restaurant.street} ${restaurant.city} ${restaurant.province} ${restaurant.country}`\n      const apiResponse = await axios.get('https://maps.googleapis.com/maps/api/geocode/json', {\n        params: {\n          address: location,\n          key: process.env.REACT_APP_API_KEY\n        }\n      })\n      let lat = apiResponse.data.results[0].geometry.location.lat\n      let lng = apiResponse.data.results[0].geometry.location.lng\n\n      await axios.put(`/api/restaurants/${id}`, {\n        name: restaurant.name,\n        description: restaurant.description,\n        priceRange: parseInt(restaurant.pricerange),\n        street: restaurant.street,\n        city: restaurant.city,\n        province: restaurant.province,\n        country: restaurant.country,\n        postalcode: restaurant.postalcode,\n        longtitude: lng,\n        latitude: lat\n      })\n      history.push(`/restaurant/${id}`)\n      dispatch({ type: 'FlashMessage', value: 'Restaurant was successfully updated!', color: 'success' })\n    } catch (err) {\n      dispatch({ type: 'FlashMessage', value: err.response.data, color: 'error' })\n    }\n  }\n\n  function updateInput(e) {\n    setRestaurant({ ...restaurant, [e.currentTarget.name]: e.currentTarget.value })\n  }\n\n  if (isLoading) {\n    return <div>Loading...</div>\n  }\n\n  return (\n    <>\n      <h1>Update Restaurant</h1>\n      <form onSubmit={submitHandler}>\n        <input name=\"name\" placeholder=\"Name\" type=\"text\" value={restaurant.name} onChange={e => updateInput(e)} required />\n        <input name=\"description\" placeholder=\"Description\" type=\"text\" value={restaurant.description} onChange={e => updateInput(e)} required />\n        <input name=\"pricerange\" placeholder=\"Price Range\" type=\"number\" value={restaurant.pricerange} onChange={e => updateInput(e)} required max=\"5\" min=\"1\" />\n        <input name=\"street\" placeholder=\"Street\" type=\"text\" value={restaurant.street} onChange={e => updateInput(e)} required />\n        <input name=\"city\" placeholder=\"City\" type=\"text\" value={restaurant.city} onChange={e => updateInput(e)} required />\n        <input name=\"province\" placeholder=\"Province\" type=\"text\" value={restaurant.province} onChange={e => updateInput(e)} required />\n        <input name=\"country\" placeholder=\"Country\" type=\"text\" value={restaurant.country} onChange={e => updateInput(e)} required />\n        <input name=\"postalcode\" placeholder=\"Postal Code\" type=\"text\" value={restaurant.postalcode} onChange={e => updateInput(e)} required />\n        <button type=\"submit\">Update Restaurant</button>\n      </form>\n    </>\n  )\n}\n\nexport default UpdateRestaurant\n","import React, { useEffect, useState, useContext } from 'react'\nimport axios from 'axios'\nimport AppContext from '../AppContext'\nimport StateContext from '../StateContext'\nimport StarRating from './StarRating'\n\nfunction RestaurantReview(props) {\n  const { review, ratings, setRatings, restaurant, setRestaurant, setRatingsCollection } = props\n\n  const dispatch = useContext(AppContext)\n  const state = useContext(StateContext)\n\n  async function handleDelete() {\n    try {\n      await axios.delete(`/api/ratings/${review.id}`)\n      // Update the rating & count displayed on page\n      updatePageRating()\n      // Remove from page\n      setRatings(prev => prev.filter(rating => rating.id !== review.id))\n      setRatingsCollection(prev => prev.filter(rating => rating.id !== review.id))\n      dispatch({ type: 'FlashMessage', value: 'Review was successfully deleted!', color: 'success' })\n    } catch (err) {\n      dispatch({ type: 'FlashMessage', value: err.response.data, color: 'error' })\n    }\n  }\n\n  function updatePageRating() {\n    let sumOfRatings = 0\n    // Add each rating to the sum\n    ratings.forEach(item => {\n      sumOfRatings += parseFloat(item.rating)\n    })\n    // Subtracts the deleted rating from sum\n    sumOfRatings -= parseFloat(review.rating)\n    // Calculates new rating\n    let updatedRating = (sumOfRatings / (ratings.length - 1)).toFixed(1)\n    // Updates the restaurants rating & count state\n    setRestaurant({ ...restaurant, rating: updatedRating, count: restaurant.count - 1 })\n  }\n\n  return (\n    <>\n      <StarRating rating={review.rating} />\n      <div>{review.rating}</div>\n      <div>{review.name}</div>\n      <div>{review.message}</div>\n      {state.loggedIn && (\n        <button type=\"submit\" onClick={handleDelete}>\n          Delete Review\n        </button>\n      )}\n      <br />\n    </>\n  )\n}\n\nexport default RestaurantReview\n","import React, { useEffect, useState, useContext } from 'react'\nimport axios from 'axios'\nimport AppContext from '../AppContext'\n\nfunction NewRatingInput({ id, setRatings, ratings, setRestaurant, restaurant, setRatingsCollection }) {\n  const [newRating, setNewRating] = useState({\n    restaurant_id: id,\n    rating: '',\n    name: '',\n    message: ''\n  })\n  const dispatch = useContext(AppContext)\n\n  function updateInput(e) {\n    setNewRating({ ...newRating, [e.currentTarget.name]: e.currentTarget.value })\n  }\n\n  async function onSubmit(e) {\n    e.preventDefault()\n    // Confirms fields have values & rating is between 1-5 before sending request to server\n    if (newRating.restaurant_id && 1 <= parseFloat(newRating.rating) <= 5 && newRating.name && newRating.message) {\n      try {\n        // Sends off request to store new rating in database\n        const response = await axios.post(`/api/ratings/`, {\n          restaurant_id: newRating.restaurant_id,\n          rating: parseFloat(newRating.rating),\n          name: newRating.name,\n          message: newRating.message\n        })\n        // Update the rating & count displayed on page\n        updateCurrentPageRating(newRating.rating)\n        // Add the new review to the page\n        setRatings(prev => [response.data].concat(prev))\n        setRatingsCollection(prev => [response.data].concat(prev))\n        // Reset the form field inputs to empty\n        setNewRating({ restaurant_id: id, rating: '', name: '', message: '' })\n        // Sends off success message\n        dispatch({ type: 'FlashMessage', value: 'Review was successfully published!', color: 'success' })\n      } catch (err) {\n        dispatch({ type: 'FlashMessage', value: err.response.data, color: 'error' })\n      }\n    } else {\n      dispatch({ type: 'FlashMessage', value: 'You cannot leave the fields blank.', color: 'error' })\n    }\n  }\n\n  function updateCurrentPageRating(newRating) {\n    let sumOfRatings = parseFloat(newRating)\n    // Loops over each rating to get sum\n    ratings.forEach(review => {\n      sumOfRatings += parseFloat(review.rating)\n    })\n    // Calculates new average rating\n    let updatedRating = (sumOfRatings / (ratings.length + 1)).toFixed(1)\n    // Updates the state\n    setRestaurant({ ...restaurant, rating: updatedRating, count: parseInt(restaurant.count) + 1 })\n  }\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input type=\"number\" name=\"rating\" placeholder=\"Rating\" value={newRating.rating} onChange={e => updateInput(e)} min=\"1\" max=\"5\" step=\"0.1\" />\n        <input type=\"text\" name=\"name\" placeholder=\"Name\" value={newRating.name} onChange={e => updateInput(e)} />\n        <input type=\"text\" name=\"message\" placeholder=\"Message\" value={newRating.message} onChange={e => updateInput(e)} />\n        <button type=\"submit\">Submit Review</button>\n      </form>\n    </>\n  )\n}\n\nexport default NewRatingInput\n","import React, { useEffect } from 'react'\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react'\n\nfunction RestaurantMap(props) {\n  const { restaurant } = props\n  const coords = { lat: restaurant.latitude, lng: restaurant.longtitude }\n\n  const mapStyles = {\n    width: '100%',\n    height: '100%'\n  }\n  const containerStyle = {\n    position: 'relative',\n    height: '400px',\n    width: '400px'\n  }\n\n  return (\n    <>\n      <Map google={props.google} zoom={14} initialCenter={coords} style={mapStyles} containerStyle={containerStyle} disableDefaultUI={true} zoomControl={true} streetViewControl={true}>\n        <Marker position={coords} />\n      </Map>\n    </>\n  )\n}\n\nexport default GoogleApiWrapper({\n  apiKey: `https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${process.env.REACT_APP_API_KEY}`\n})(RestaurantMap)\n","import React, { useEffect, useState, useContext } from 'react'\nimport { useParams, useHistory, Link } from 'react-router-dom'\nimport axios from 'axios'\nimport RestaurantReview from './RestaurantReview'\nimport NewRatingInput from './NewRatingInput'\nimport AppContext from '../AppContext'\nimport StateContext from '../StateContext'\nimport StarRating from './StarRating'\nimport RestaurantMap from './RestaurantMap'\n\nfunction RestaurantDetails(props) {\n  const [isLoading, setIsLoading] = useState(true)\n  const [restaurant, setRestaurant] = useState()\n  const [ratings, setRatings] = useState([])\n  const [ratingsCollection, setRatingsCollection] = useState([])\n  const [counter, setCounter] = useState(5)\n  const [isMoreRatings, setIsMoreRatings] = useState(false)\n  const [scrollPosition, setScrollPosition] = useState(0)\n  const [loadEvent, setLoadEvent] = useState(0)\n\n  const history = useHistory()\n  const { id } = useParams()\n  const dispatch = useContext(AppContext)\n  const state = useContext(StateContext)\n\n  useEffect(() => {\n    async function fetchRestaurantData() {\n      try {\n        const response = await axios.get(`/api/restaurants/${id}`)\n        setRestaurant(response.data)\n        fetchRestaurantReviews()\n      } catch (err) {\n        dispatch({ type: 'FlashMessage', value: 'A restaurant with that id does not exist', color: 'error' })\n        history.push('/')\n      }\n    }\n    async function fetchRestaurantReviews() {\n      try {\n        const response = await axios.get(`/api/ratings/${id}`)\n        setRatingsCollection(response.data)\n        setRatings(response.data.slice(0, counter))\n        if (response.data.length > 5) setIsMoreRatings(true)\n        setIsLoading(false)\n      } catch (err) {\n        dispatch({ type: 'FlashMessage', value: err.response.data, color: 'error' })\n      }\n    }\n    fetchRestaurantData()\n  }, [id])\n\n  // Handle Delete Button Click\n  async function handleDelete(id) {\n    const confirm = window.confirm('Are you sure you want to delete this restaurant?')\n    if (confirm) {\n      try {\n        await axios.delete(`/api/restaurants/${id}`)\n        dispatch({ type: 'FlashMessage', value: 'Restaurant was successfully deleted!', color: 'success' })\n        history.push('/')\n      } catch (err) {\n        dispatch({ type: 'FlashMessage', value: err.response.data, color: 'error' })\n      }\n    }\n  }\n\n  // Handle Load More Button\n  useEffect(() => {\n    setScrollPosition(window.scrollY)\n    setRatings(ratingsCollection.slice(0, counter))\n    setLoadEvent(prev => prev + 1)\n    if (ratingsCollection.length && counter >= ratingsCollection.length) {\n      setIsMoreRatings(false)\n    }\n  }, [counter])\n\n  // Restores current page position after loading new ratings\n  useEffect(() => {\n    window.scrollTo(0, scrollPosition)\n  }, [loadEvent])\n\n  if (isLoading) {\n    return <div>Loading...</div>\n  }\n\n  return (\n    <>\n      <h1>{restaurant.name}</h1>\n      <RestaurantMap restaurant={restaurant} />\n      <h3>Page Details</h3>\n      <div>name: {restaurant.name}</div>\n      <div>description: {restaurant.description}</div>\n      <div>location: {restaurant.location}</div>\n      <div>pricerange: {restaurant.pricerange}</div>\n      {restaurant.rating > 0 ? <StarRating rating={restaurant.rating} count={restaurant.count} /> : 'No Ratings'}\n      <div>rating: {restaurant.rating}</div>\n      <div>count: {restaurant.count}</div>\n      {state.loggedIn && (\n        <>\n          <Link to={`/restaurant/${restaurant.id}/update`}>Edit Restaurant</Link>\n          <button onClick={() => handleDelete(restaurant.id)}>Delete Restaurant</button>\n        </>\n      )}\n      <br />\n      <NewRatingInput id={id} setRatings={setRatings} ratings={ratings} setRestaurant={setRestaurant} restaurant={restaurant} setRatingsCollection={setRatingsCollection} />\n      <br />\n      <br />\n      <div>\n        {ratings.map(review => {\n          return <RestaurantReview key={review.id} review={review} setRatings={setRatings} ratings={ratings} setRestaurant={setRestaurant} restaurant={restaurant} setRatingsCollection={setRatingsCollection} />\n        })}\n      </div>\n      {isMoreRatings && <button onClick={() => setCounter(prev => prev + 5)}>Load More Ratings</button>}\n    </>\n  )\n}\n\nexport default RestaurantDetails\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction PageNotFound(props) {\n  return (\n    <>\n      <h1>404 Error</h1>\n      <div>Page not found</div>\n      <Link to=\"/\">Return Home</Link>\n    </>\n  )\n}\n\nexport default PageNotFound\n","import React, { useEffect, useState, useCallback, useContext } from 'react'\nimport axios from 'axios'\nimport AppContext from '../AppContext'\nimport { Link } from 'react-router-dom'\n\nfunction Searchbar(props) {\n  const [searchQuery, setSearchQuery] = useState('')\n  const [searchResults, setSearchResults] = useState([])\n  const [searchLoading, setSearchLoading] = useState(false)\n  const dispatch = useContext(AppContext)\n  let timer\n\n  const fetchResults = async () => {\n    try {\n      let response = await axios.get(`/api/query/${searchQuery}`)\n      if (response.data.length) {\n        setSearchResults(response.data)\n      } else {\n        setSearchResults([])\n      }\n      setSearchLoading(false)\n    } catch (err) {\n      dispatch({ type: 'FlashMessage', value: err.response.data, color: 'error' })\n    }\n  }\n\n  useEffect(() => {\n    if (searchQuery.length) {\n      setSearchLoading(true)\n      timer = setTimeout(fetchResults, 300)\n    } else {\n      setSearchLoading(false)\n      setSearchResults([])\n    }\n    return () => clearTimeout(timer)\n  }, [searchQuery])\n\n  return (\n    <>\n      <div>{searchLoading && <h3>Loading...</h3>}</div>\n      <input type=\"text\" placeholder=\"Search for restaurant...\" value={searchQuery} onChange={e => setSearchQuery(e.currentTarget.value)} />\n      {searchResults.length > 0 && (\n        <ul>\n          {searchResults.map(result => {\n            return <SingleSearchResult key={result.id} {...result} setSearchResults={setSearchResults} />\n          })}\n        </ul>\n      )}\n    </>\n  )\n}\n\nfunction SingleSearchResult(props) {\n  return (\n    <li>\n      <Link to={`/restaurant/${props.id}`} onClick={() => props.setSearchResults(false)}>\n        <div>{props.name}</div>\n      </Link>\n    </li>\n  )\n}\n\nexport default Searchbar\n","import React, { useEffect, useContext } from 'react'\nimport { Link } from 'react-router-dom'\nimport Searchbar from './Searchbar'\nimport AppContext from '../AppContext'\nimport StateContext from '../StateContext'\n\nfunction Header(props) {\n  const dispatch = useContext(AppContext)\n  const state = useContext(StateContext)\n  function switchView() {\n    if (state.loggedIn) {\n      dispatch({ type: 'Logout' })\n    } else {\n      dispatch({ type: 'Login' })\n    }\n  }\n  return (\n    <>\n      <div className=\"navbar\">\n        <ul className=\"nav-list\">\n          <li className=\"nav-item\">\n            <Link to=\"/\" className=\"nav-link\">\n              Home\n            </Link>\n          </li>\n          {state.loggedIn && (\n            <li className=\"nav-item\">\n              <Link to=\"/restaurant/create\" className=\"nav-link\">\n                Create Restaurant\n              </Link>\n            </li>\n          )}\n          <li className=\"nav-item\">\n            <button className=\"nav-link\" onClick={switchView}>\n              {state.loggedIn ? 'Switch to User' : 'Switch to Admin'}\n            </button>\n          </li>\n        </ul>\n        <Searchbar />\n      </div>\n    </>\n  )\n}\n\nexport default Header\n","import React, { useEffect } from 'react'\n\nfunction Footer(props) {\n  return (\n    <>\n      <div className=\"footer\">\n        <p className=\"footer-text\">Yelp Clone Web App</p>\n      </div>\n    </>\n  )\n}\n\nexport default Footer\n","import React, { useEffect } from 'react'\n\nfunction FlashMessage({ state }) {\n  function handleRemove(e) {\n    e.currentTarget.style.display = 'none'\n  }\n\n  return (\n    <div className=\"flash-message-container\">\n      {state.flashMessages.length > 0 &&\n        state.flashMessages.map((flashMessage, index) => {\n          return (\n            <div key={index} className={'alert ' + flashMessage.color} onAnimationEnd={e => handleRemove(e)}>\n              <div className=\"flashMessage\">{flashMessage.message}</div>\n            </div>\n          )\n        })}\n    </div>\n  )\n}\n\nexport default FlashMessage\n","import React, { useState, useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport axios from 'axios'\nimport AppContext from '../AppContext'\nimport StateContext from '../StateContext'\n\nfunction CreateRestaurantPage(props) {\n  const [restaurant, setRestaurant] = useState({\n    name: '',\n    description: '',\n    pricerange: '',\n    street: '',\n    city: '',\n    province: '',\n    country: '',\n    postalcode: ''\n  })\n\n  let history = useHistory()\n  const dispatch = useContext(AppContext)\n  const state = useContext(StateContext)\n\n  async function submitHandler(e) {\n    e.preventDefault()\n    try {\n      let location = `${restaurant.street} ${restaurant.city} ${restaurant.province} ${restaurant.country}`\n      const apiResponse = await axios.get('https://maps.googleapis.com/maps/api/geocode/json', {\n        params: {\n          address: location,\n          key: process.env.REACT_APP_API_KEY\n        }\n      })\n      let lat = apiResponse.data.results[0].geometry.location.lat\n      let lng = apiResponse.data.results[0].geometry.location.lng\n\n      const response = await axios.post(`/api/restaurants`, {\n        name: restaurant.name,\n        description: restaurant.description,\n        priceRange: parseInt(restaurant.pricerange),\n        street: restaurant.street,\n        city: restaurant.city,\n        province: restaurant.province,\n        country: restaurant.country,\n        postalcode: restaurant.postalcode,\n        longtitude: lng,\n        latitude: lat\n      })\n      dispatch({ type: 'FlashMessage', value: 'Restaurant was successfully created!', color: 'success' })\n      history.push(`/restaurant/${response.data.id}`)\n    } catch (err) {\n      dispatch({ type: 'FlashMessage', value: err.response.data, color: 'error' })\n    }\n  }\n\n  function updateInput(e) {\n    setRestaurant({ ...restaurant, [e.currentTarget.name]: e.currentTarget.value })\n  }\n\n  // Redirect if user not logged in\n  useEffect(() => {\n    if (!state.loggedIn) {\n      dispatch({ type: 'FlashMessage', value: 'You do not have the authorization to view that page.', color: 'error' })\n      history.push('/')\n    }\n  }, [state.loggedIn])\n\n  return (\n    <>\n      <h1>Create New Restaurant</h1>\n      <form onSubmit={submitHandler}>\n        <input name=\"name\" placeholder=\"Name\" type=\"text\" value={restaurant.name} onChange={e => updateInput(e)} required />\n        <input name=\"description\" placeholder=\"Description\" type=\"text\" value={restaurant.description} onChange={e => updateInput(e)} required />\n        <input name=\"pricerange\" placeholder=\"Price Range\" type=\"number\" value={restaurant.pricerange} onChange={e => updateInput(e)} required max=\"5\" min=\"1\" />\n        <input name=\"street\" placeholder=\"Street\" type=\"text\" value={restaurant.street} onChange={e => updateInput(e)} required />\n        <input name=\"city\" placeholder=\"City\" type=\"text\" value={restaurant.city} onChange={e => updateInput(e)} required />\n        <input name=\"province\" placeholder=\"Province\" type=\"text\" value={restaurant.province} onChange={e => updateInput(e)} required />\n        <input name=\"country\" placeholder=\"Country\" type=\"text\" value={restaurant.country} onChange={e => updateInput(e)} required />\n        <input name=\"postalcode\" placeholder=\"Postal Code\" type=\"text\" value={restaurant.postalcode} onChange={e => updateInput(e)} required />\n        <button type=\"submit\">Create New Restaurant</button>\n      </form>\n    </>\n  )\n}\n\nexport default CreateRestaurantPage\n","import React, { useReducer } from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\n\nimport AppContext from './AppContext'\nimport StateContext from './StateContext'\n\n// Components\nimport Home from './components/Home'\nimport UpdateRestaurant from './components/UpdateRestaurant'\nimport RestaurantDetails from './components/RestaurantDetails'\nimport PageNotFound from './components/PageNotFound'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport FlashMessage from './components/FlashMessage'\nimport CreateRestaurantPage from './components/CreateRestaurantPage'\n\nfunction App() {\n  const initialState = {\n    flashMessages: [],\n    loggedIn: Boolean(localStorage.getItem('yelp-admin'))\n  }\n\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case 'FlashMessage':\n        return { ...state, flashMessages: state.flashMessages.concat({ message: action.value, color: action.color }) }\n      case 'Login':\n        localStorage.setItem('yelp-admin', true)\n        return { ...state, loggedIn: true }\n      case 'Logout':\n        localStorage.removeItem('yelp-admin')\n        return { ...state, loggedIn: false }\n    }\n  }\n\n  const [state, dispatch] = useReducer(reducer, initialState)\n  return (\n    <AppContext.Provider value={dispatch}>\n      <StateContext.Provider value={state}>\n        <BrowserRouter>\n          <Header />\n          <FlashMessage state={state} />\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/restaurant/create\">\n              <CreateRestaurantPage />\n            </Route>\n            <Route path=\"/restaurant/:id\" exact>\n              <RestaurantDetails />\n            </Route>\n            <Route path=\"/restaurant/:id/update\">\n              <UpdateRestaurant />\n            </Route>\n            <Route path=\"*\">\n              <PageNotFound />\n            </Route>\n          </Switch>\n          <Footer />\n        </BrowserRouter>\n      </StateContext.Provider>\n    </AppContext.Provider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}